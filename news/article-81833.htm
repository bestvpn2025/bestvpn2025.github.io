<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://bestvpn2025.github.io/news/article-81833.htm" />
    <meta charset="utf-8">
    <!-- Always force latest IE rendering engine -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Mobile Specific Meta -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Go_error处理及panic、recover使用的正确姿势</title>
        <meta name="description" content="异常 异常就是程序出现了不正常的情况，会导致程序非正常停止，而异常处理就是针对非正常停止的情况，给出异常时的处理方式。语法错误不算异常体系中  error：   error是一个接口，作用是返回程序异" />
        <link rel="icon" href="/assets/website/img/winxraynode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="2025年最好的VPN 推荐免费VPN节点订阅中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://bestvpn2025.github.io/news/article-81833.htm" />
    <meta property="og:site_name" content="2025年最好的VPN 推荐免费VPN节点订阅中文网" />
    <meta property="og:title" content="Go_error处理及panic、recover使用的正确姿势" />
    <meta property="og:image" content="https://bestvpn2025.github.io/uploads/20240721/80d9ee68aa8583b1b2821cf7a85a302c.webp" />
        <meta property="og:release_date" content="2025-03-26T08:56:51" />
    <meta property="og:updated_time" content="2025-03-26T08:56:51" />
        <meta property="og:description" content="异常 异常就是程序出现了不正常的情况，会导致程序非正常停止，而异常处理就是针对非正常停止的情况，给出异常时的处理方式。语法错误不算异常体系中  error：   error是一个接口，作用是返回程序异" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Go_error处理及panic、recover使用的正确姿势">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- BOOTSTRAP CSS -->
    <link rel="stylesheet" href="/assets/website/css/winxraynode/bootstrap.min.css">
    <!-- FONT-AWESOME -->
    <link rel="stylesheet" href="/assets/website/css/winxraynode/font-awesome-4.7.0/css/font-awesome.min.css">
    <!-- OWL CAROUSEL -->
    <link href="/assets/website/css/winxraynode/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/winxraynode/owl.theme.default.min.css" rel="stylesheet">
    <!-- LIGHTBOX -->
    <link rel=" stylesheet" href="/assets/website/css/winxraynode/lightbox.css">
    <!--Style CSS file-->
    <link rel=" stylesheet" href="/assets/website/css/winxraynode/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-1V97H1CF62"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-1V97H1CF62');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ====== Preloader ======  -->
    <div id="loader-wrapper">
        <div id="loader"></div>
        <div class="loader-section section-left"></div>
        <div class="loader-section section-right"></div>
    </div>
    <!-- ======End Preloader ======  -->
    <!-- ======START NAVGITION ======  -->
    <!-- Menu -->
    <div class="main-menu">
        <div class="container">
            <nav class="navbar navbar-expand-lg">
                <!-- logo -->
                <a class="navbar-brand" href="/">
                                <span>
                    2025年最好的VPN                </span>
                                </a>

                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText">
                    <span class="icon-bar"><i class="fa fa-bars fa-2x"></i></span>
                </button>
                <!--End of Resposive Toggle icon-->
                <div class="collapse navbar-collapse" id="navbarText">
                    <!--Main menu navigation list-->
                    <ul class="navbar-nav ml-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                            </ul>
                    <!--End of Main menu navigation list-->
                </div>
                <!--End of resposive collapse class-->
            </nav>
        </div>
    </div>
    <!-- Menu -->
    <!-- ====== END NAVGITION ======  -->
    <!-- =======START HEADER=========== -->
    <header class="home category" id="home" data-scroll-index="0">
        <div class="container">
            <div class="row">
                <div class="col-lg-7 home-content mt-md-5 mt-sm-5">
                    <h1 class="heading-primary mb-3 title">
                        Go_error处理及panic、recover使用的正确姿势                    </h1>
                    <p class="mb-5">
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                    </p>
                </div>
            </div>
        </div>
    </header>
    <!-- ====== END HEADER ======  -->
    <!-- Scroll to Top -->
    <div id="scroll-to-top"><i class="fa fa-arrow-up fa-fw"></i></div>
    <!-- ====== START ABOUT ======  -->
    <section class="about padding" id="about" data-scroll-index="1">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h2> <a id="_0" rel="nofollow"></a>异常</h2> <p>异常就是程序出现了不正常的情况，会导致程序非正常停止，而异常处理就是针对非正常停止的情况，给出异常时的处理方式。语法错误不算异常体系中</p> <h2> <a id="error_4" rel="nofollow"></a>error：</h2> <blockquote> <ul> <li>error是一个接口，作用是返回程序异常的信息，errors实现了error</li> <li>创建error使用errors.New()可以定义异常信息</li> <li>如果将error作为返回值的话，要放在返回值列表的最后</li> </ul> </blockquote> <p>演示：</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">TestError</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2 <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>result <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	err <span class="token operator">=</span> <span class="token boolean">nil</span> 	<span class="token keyword">if</span> num1 <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> num2 <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{<!-- --></span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"除数不能为0"</span><span class="token punctuation">)</span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	result <span class="token operator">=</span> num1 <span class="token operator">/</span> num2 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	num<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">TestError</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		err <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"除数不能为0"</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>标准库将error定义为接口类型，以便于实现自定义错误类型</p> <pre><code class="prism language-go"><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">{<!-- --></span>   <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>  <span class="token punctuation">}</span> </code></pre> <p>error是最后一个返回参数。标准库提供了相关创建函数， 含简单错误文本的error对象</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	z<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">==</span> errDivByZero <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token function">println</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">var</span> errDivByZero <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"division by zero"</span><span class="token punctuation">)</span>  <span class="token keyword">func</span> <span class="token function">div</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span> y <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> errDivByZero 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> x <span class="token operator">/</span> y<span class="token punctuation">,</span> <span class="token boolean">nil</span> <span class="token punctuation">}</span> </code></pre> <p>错误变量通常以err作为前缀，且字符串内容全部小写，没有结束标点，以便于嵌入到其他格式化字符串中输出。与errors.New类似的还有fmt.Errorf，它返回一个格式化内容的错误对象。某些时候，我们需要自定义错误类型，以便容纳更多上下文状态信息。如此，还可基于类型做出判断</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	z<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">switch</span> e <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> <span class="token comment">// 根据类型匹配</span> 		<span class="token keyword">case</span> DivError<span class="token punctuation">:</span> 			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> e<span class="token punctuation">.</span>x<span class="token punctuation">,</span> e<span class="token punctuation">.</span>y<span class="token punctuation">)</span> 		<span class="token keyword">default</span><span class="token punctuation">:</span> 			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token function">println</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">type</span> DivError <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span> 	x<span class="token punctuation">,</span> y <span class="token builtin">int</span> <span class="token punctuation">}</span>  <span class="token comment">//自定义错误类型。</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>DivError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">return</span> <span class="token string">"division by zero"</span> <span class="token punctuation">}</span>  <span class="token comment">//实现error接口方法。</span> <span class="token keyword">func</span> <span class="token function">div</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span> y <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> DivError<span class="token punctuation">{<!-- --></span>x<span class="token punctuation">,</span> y<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> 	<span class="token comment">//返回自定义错误类型。</span> 	<span class="token keyword">return</span> x <span class="token operator">/</span> y<span class="token punctuation">,</span> <span class="token boolean">nil</span> <span class="token punctuation">}</span> </code></pre> <ul> <li>自定义错误类型通常以Error为后缀。在用switch按类型匹配时，注意case顺序。应将自定义类型放在前面，优先匹配具体错误类型</li> <li>在写代码中，我们不能忽略error返回值，应做严格检查，否则可能会导致错误的逻辑状态。调用多返回值函数时，除error外，其他返回值同样需要关注。以os.File.Read方法为例，它会同时返回剩余内容和EOF。</li> </ul> <h2> <a id="panicrecover_109" rel="nofollow"></a>panic与recover：</h2> <blockquote> <p>panic是内置函数，可以终止程序，会立即中断当前函数流程，触发执行延迟调用<br /> recover可以拦截panic异常信息，但是recover不可以直接调用，只有在defer调用的函数中有效</p> </blockquote> <p>如果是放在循环中了，连续调用panic，仅最后一个会被recover捕耕</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> <span class="token comment">// 捕捉错误</span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  	<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"我挂了"</span><span class="token punctuation">)</span>          <span class="token comment">// 引发错误</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"会走这一步吗"</span><span class="token punctuation">)</span> <span class="token comment">// 不会执行，编译器也会提示这是一个永远不会执行的代码</span> <span class="token punctuation">}</span> </code></pre> <p>除非是不可恢复性，导致系统无法正常工作的错误，否则不建议使用Panic</p> <p>例如：文件系统没有操作权限，服务端口被占用，数据库未启动等情况</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-81166.htm">快乐的用vscode刷LeetCode题目</a></p>
                                        <p>下一个：<a href="/news/article-81834.htm">延吉宠物店电话号码 延吉宠物店电话号码多少</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-18-free-subscribe-node.htm" title="2025年最好的VPN | 3月18日18.7M/S|免费Clash/SSR/V2ray/Shadowrocket订阅节点地址">2025年最好的VPN | 3月18日18.7M/S|免费Clash/SSR/V2ray/Shadowrocket订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-83227.htm" title="动物防疫计划表（动物防疫实施方案）">动物防疫计划表（动物防疫实施方案）</a></li>
                        <li class="py-2"><a href="/news/article-83228.htm" title="动物防疫疫苗管理（动物防疫站疫苗）">动物防疫疫苗管理（动物防疫站疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-79773.htm" title="Spring Boot框架下实现Excel服务端导入导出">Spring Boot框架下实现Excel服务端导入导出</a></li>
                        <li class="py-2"><a href="/news/article-81834.htm" title="延吉宠物店电话号码 延吉宠物店电话号码多少">延吉宠物店电话号码 延吉宠物店电话号码多少</a></li>
                        <li class="py-2"><a href="/news/article-81833.htm" title="Go_error处理及panic、recover使用的正确姿势">Go_error处理及panic、recover使用的正确姿势</a></li>
                        <li class="py-2"><a href="/news/article-75961.htm" title="长沙哪有宠物领养的（长沙哪有宠物领养的地方）">长沙哪有宠物领养的（长沙哪有宠物领养的地方）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-19-free-v2ray-subscribe.htm" title="2025年最好的VPN | 3月19日19M/S|免费V2ray/Shadowrocket/Clash/SSR订阅节点地址">2025年最好的VPN | 3月19日19M/S|免费V2ray/Shadowrocket/Clash/SSR订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-77031.htm" title="SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus">SpringCloud系列之五&#8212;集中配置组件Config+消息总线Bus</a></li>
                        <li class="py-2"><a href="/news/article-81166.htm" title="快乐的用vscode刷LeetCode题目">快乐的用vscode刷LeetCode题目</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ====== END ABOUT======  -->
        <!-- ====== START FOOTER BOTTOM======  -->
    <section class="footer-bottom">
        <div class="container">
            <div class="row">
                <div class="offset-md-3 col-md-6 offset-md-3">
                    <!-- START RIGHTS -->
                    <div class="copyright">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        <p>2025年最好的VPN 推荐免费VPN节点订阅中文网 版权所有</p>
                        <p>Powered by WordPress</p>
                    </div>
                    <!-- END RIGHTS -->
                </div>
            </div>
        </div>
    </section>
    <!-- ====== END FOOTER BOTTOM======  -->
    <!-- ====== JS ======  -->
    <!--jquery-3.3.1 js-->
    <script src="/assets/website/js/frontend/winxraynode/jquery-3.3.1.min.js"></script>
    <!-- popper js -->
    <script src="/assets/website/js/frontend/winxraynode/popper.min.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/winxraynode/bootstrap.min.js"></script>
    <!-- scrollIt js -->
    <script src="/assets/website/js/frontend/winxraynode/scrollIt.min.js"></script>
    <!-- countTo js -->
    <script src="/assets/website/js/frontend/winxraynode/jquery.countTo.js"></script>
    <!-- filter js -->
    <script src="/assets/website/js/frontend/winxraynode/jquery.filterizr.min.js"></script>
    <!-- waypoints js -->
    <script src="/assets/website/js/frontend/winxraynode/waypoints.min.js"></script>
    <!-- owl carousel js -->
    <script src="/assets/website/js/frontend/winxraynode/owl.carousel.min.js"></script>
    <!-- validator js -->
    <script src="/assets/website/js/frontend/winxraynode/validator.js"></script>
    <!-- coustom js -->
    <script src="/assets/website/js/frontend/winxraynode/main.js"></script>
    <!-- lightbox js -->
    <script src="/assets/website/js/frontend/winxraynode/lightbox.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>